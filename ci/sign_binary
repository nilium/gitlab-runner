#!/usr/bin/env bash

set -eo pipefail

cmd="$0"
binDir="$1"
keyPath="$2"
certPath="$3"
certPassword="$4"
shift 4
if [[ ! -d "$binDir" || ! -f "$keyPath" || ! -f "$certPath" ]]; then
    if [[ -d "$binDir" && -z "$certPath" ]]; then
        echo "No certificate file provided. Ignoring."
        exit 0
    fi

    echo
    printf "Usage: %s <binfile_dir> <certificate_key_file> <certificate_cert_file> <certificate_password> <platform_1> [platform_n]\n" "${cmd}"
    [ -d "${binDir}" ] || echo "Invalid binfile_dir ${binDir}"
    [ -f "${keyPath}" ] || echo "Invalid certificate_key_file ${keyPath}"
    [ -f "${certPath}" ] || echo "Invalid certificate_cert_file ${certPath}"
    echo
    exit 1
fi

platforms=$@
for platform in ${platforms[@]}; do
    platformSafeName="${platform/\//-}"
    files=$(find "${binDir}" -name "gitlab-runner-*${platformSafeName}*")
    for file in ${files[@]}; do
        echo "Signing '$file'..."

        # Rename unsigned file so that the signed file can take its place
        unsignedPath="$(dirname "${file}")/unsigned-$(basename "${file}")"
        mv -f "${file}" "${unsignedPath}"

        # Sign binary
        osslsigncode sign -certs "${certPath}" -key "${keyPath}" \
            -pass "${certPassword}" -n "GitLab Runner" -i "https://gitlab.com" \
            -t "http://timestamp.comodoca.com/authenticode" \
            -in "${unsignedPath}" -out "${file}"

        # Print signature details
        osslsigncode verify "${file}"

        # Discard unsigned binary
        rm "${unsignedPath}"
    done
done
