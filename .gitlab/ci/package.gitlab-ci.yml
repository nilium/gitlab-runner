.packages: &packages
  extends:
  - .gitlab_org_runners
  - .merge_request_pipelines
  - .except_docs
  stage: package
  needs:
  - 'helper images'
  - 'binaries linux/386 linux/amd64 linux/arm linux/arm64'
  before_script:
  - |
    # checking GPG signing support
    if [ -n "$GPG_KEY" ]; then
      echo "$GPG_KEY" | gpg --batch --no-tty --allow-secret-key-import --import -
      unset GPG_KEY
      export GPG_KEYID=$(gpg --with-colon --list-secret-keys | head -n1 | cut -d : -f 5)
    else
      echo -e "\033[0;31m****** GPG signing disabled ******\033[0m"
    fi
  script:
  - source ci/touch_make_dependencies
  - make ${CI_JOB_NAME}
  artifacts:
    paths:
    - out/deb/
    - out/rpm/
    expire_in: 7d

package-deb: *packages
package-rpm: *packages

variables:
  WINDOWS_CODE_SIGN_PASSWORD: passw0rd # TODO: Move this to a CI variable before merging

sign_helper images:
  extends:
  - .merge_request_pipelines
  - .docker
  stage: package
  script:
  - ci/sign_binary dockerfiles/build/binaries/
      "${WINDOWS_CODE_SIGN_KEY_PATH}" "${WINDOWS_CODE_SIGN_CERT_PATH}"
      "${WINDOWS_CODE_SIGN_PASSWORD}"
      x86_64-windows
  needs:
  - 'helper images'
  artifacts:
    paths:
    - out/helper-images/
    - dockerfiles/build/binaries/gitlab-runner-helper*
    - .gopath/bin
    - .gopath/.ok
    expire_in: 7d

sign_binaries windows/386 windows/amd64:
  extends:
    - .gitlab_org_runners
    - .merge_request_pipelines
    - .except_docs
  stage: package
  needs:
    - 'binaries windows/386 windows/amd64'
  script:
    - export platforms=( $(echo $CI_JOB_NAME | sed 's|sign_binaries ||') )
    - ci/sign_binary out/binaries
        "${WINDOWS_CODE_SIGN_KEY_PATH}" "${WINDOWS_CODE_SIGN_CERT_PATH}"
        "${WINDOWS_CODE_SIGN_PASSWORD}"
        ${platforms[@]}
  artifacts:
    paths:
      - out/binaries/
    expire_in: 7d
